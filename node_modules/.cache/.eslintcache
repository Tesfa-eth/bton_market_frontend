[{"/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/index.js":"1","/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/App.js":"2","/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/reportWebVitals.js":"3","/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/components/Header.js":"4","/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/components/OnSaleItemsList.js":"5","/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/components/Card.js":"6","/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/components/Navbar.js":"7","/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/pages/Categories.js":"8","/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/pages/Profile.js":"9","/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/pages/Home.js":"10","/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/pages/Sell.js":"11"},{"size":710,"mtime":1670167420217,"results":"12","hashOfConfig":"13"},{"size":818,"mtime":1670167893072,"results":"14","hashOfConfig":"13"},{"size":362,"mtime":1668823436027,"results":"15","hashOfConfig":"13"},{"size":220,"mtime":1670165785249,"results":"16","hashOfConfig":"13"},{"size":913,"mtime":1668825114341,"results":"17","hashOfConfig":"13"},{"size":1326,"mtime":1668825114341,"results":"18","hashOfConfig":"13"},{"size":791,"mtime":1669861113040,"results":"19","hashOfConfig":"13"},{"size":122,"mtime":1669861399025,"results":"20","hashOfConfig":"13"},{"size":113,"mtime":1669860870374,"results":"21","hashOfConfig":"13"},{"size":1192,"mtime":1670167662103,"results":"22","hashOfConfig":"13"},{"size":3104,"mtime":1669868732436,"results":"23","hashOfConfig":"13"},{"filePath":"24","messages":"25","suppressedMessages":"26","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"pb9t4b",{"filePath":"27","messages":"28","suppressedMessages":"29","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"34","messages":"35","suppressedMessages":"36","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"40","usedDeprecatedRules":"33"},{"filePath":"41","messages":"42","suppressedMessages":"43","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"44","usedDeprecatedRules":"33"},{"filePath":"45","messages":"46","suppressedMessages":"47","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"33"},{"filePath":"54","messages":"55","suppressedMessages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"57","messages":"58","suppressedMessages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"61"},"/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/index.js",[],[],"/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/App.js",["62"],[],"/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/reportWebVitals.js",[],[],[],"/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/components/Header.js",[],[],"/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/components/OnSaleItemsList.js",["63"],[],"import React from 'react'\nimport Card from './Card'\nimport Box from '@mui/material/Box';\nimport Paper from '@mui/material/Paper';\nimport Grid from '@mui/material/Grid';\n\nconst OnSaleItemsList = (props) => {\n    \n  return (\n\n    <div className='onSaleItems'>\n        <Box sx={{ flexGrow: 1 }}>\n        <Grid container spacing={-1}>\n     { props.onSaleItems.map((items, idx) => (\n        <div key={items.id}>       \n            \n            <Grid p={2} item xs={3} md={3} lg={3}>\n            <Card \n            name={items.name}\n            img_url = {items.img} \n            condition={items.condition} \n            negotiable={items.negotiable} \n            price ={items.price}\n            seller = {items.seller}\n            sold = {items.sold}\n            />\n            </Grid>\n        </div>\n        \n\n        \n      ))\n        }\n      </Grid>\n    </Box>\n    \n    </div>\n  )\n}\n\nexport default OnSaleItemsList","/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/components/Card.js",["64","65","66"],[],"import * as React from 'react';\nimport Box from '@mui/material/Box';\nimport Card from '@mui/material/Card';\nimport CardActions from '@mui/material/CardActions';\nimport CardContent from '@mui/material/CardContent';\nimport Button from '@mui/material/Button';\nimport Typography from '@mui/material/Typography';\n\nconst bull = (\n  <Box\n    component=\"span\"\n    sx={{ display: 'inline-block', mx: '2px', transform: 'scale(0.8)' }}\n  >\n    â€¢\n  </Box>\n);\n\nfunction BasicCard(props) {\n    const {name, img_url, condition, negotiable, price, seller, sold} = props\n  return (\n    <Card sx={{ width: 300 }}>\n      <CardContent>\n        <img id='onSaleItemImage' src={img_url}/>\n        <Typography sx={{ fontSize: 14 }} color=\"text.secondary\" gutterBottom>\n          {name}\n        </Typography>\n        \n        <Typography variant=\"body2\">\n          {price}$\n          \n          {negotiable ? '    Negotiable': '    Non-negotiable'}\n        </Typography>\n        {sold ? \n        (<Typography sx={{ mb: .5 }} color=\"text.secondary\">\n        Sold\n        </Typography>) :\n        (<Typography sx={{ mb: .5 }} color=\"text.secondary\">\n        On sale\n      </Typography>)\n        }\n      </CardContent>\n      <CardActions>\n        <Button size=\"small\">{seller}</Button>\n      </CardActions>\n    </Card>\n  );\n}\n\nexport default BasicCard;","/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/components/Navbar.js",[],[],"/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/pages/Categories.js",[],[],"/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/pages/Profile.js",[],[],"/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/pages/Home.js",["67","68","69","70"],[],"/Users/tesfatsionshiferaw/Documents/GitHub/bton_market_frontend/src/pages/Sell.js",["71","72"],[],"import React from 'react'\nimport { useState } from 'react'\nimport { ToastContainer, toast } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nconst Sell = () => {\n  const [name, setName] = useState('');\n  const [seller, setSeller] = useState('')\n  const [condition, setCondition] = useState('')\n  const [price, setPrice] = useState(0.0)\n  const [negotiable, setNegotiable] = useState(false)\n  const [sold, setSold] = useState(false)\n  const [img, setImg] = useState('')\n\n  //const toastOnSubmission = () => toast(\"Your item is on sale now. Buyers will be reaching out to you soon!\");\n\n  const clearInputeFields = () =>{\n    setName('')\n    setSeller('')\n    setCondition('')\n    setPrice(0.0)\n    setNegotiable(false)\n    setSold(false)\n    setImg('')\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    const sellItemInfo = {\n        \"name\": name,\n        \"seller\": seller,\n        \"condition\": condition,\n        \"price\": price,\n        \"negotiable\": negotiable,\n        \"sold\": sold,\n        \"img\": img\n    }\n    //console.log(postData)\n    fetch('https://btonmarketapi.herokuapp.com/api/onsale-create/', {\n      method: 'POST',\n      headers: {\"Content-Type\": \"application/json\"},\n      body: JSON.stringify(sellItemInfo) })\n      .then((response) => response.json())\n      .then(clearInputeFields())\n      .then((data) =>{\n        //console.log(data);\n        alert(\"Your item is on sale now. Buyers will be reaching out to you soon!\")\n      })\n      .catch((err) =>{\n        console.log(err.message);\n      })\n  }\n  return (\n    <div className='sell-container'>\n    <div className='create'>\n      <h2>Sell Item</h2>\n      <form onSubmit={handleSubmit}>\n        <label className='sell-lable'>Item Name</label>\n        <input type='text' required placeholder='Item name' value={name} onChange={(e) => setName(e.target.value)}/>\n        <label>Seller name</label>\n        <input type='text' required value={seller} placeholder='John Wick' onChange={(e) => setSeller(e.target.value)}/>\n        <label>Condition</label>\n        <select value={condition} onChange={(e) => setCondition(e.target.value)}>\n          <option value='Old'>Old</option>\n          <option value='Good'>Good</option>\n          <option value='Nice'>Nice</option>\n          <option value='Excellent'>Excellent</option>\n          <option value='Brand new'>Brand new</option>\n        </select>\n        <label>Price</label>\n        <input type='text' required value={price} placeholder='enter price' onChange={(e) => setPrice(e.target.value)}/>\n        <div className='radio-button' required onChange={(e) => setNegotiable(e.target.value)}>\n          <input type='radio' value={true} name='negotiate' /> Negotiable\n          <input type='radio' value={false} name='negotiate' /> Non-Negotiable\n        </div>\n\n        <label>Image id</label>\n        <input type='text' required value={img} placeholder='https://www.google.com/image' onChange={(e) => setImg(e.target.value)}/>\n        <button className='submit-button'>Put on Sell</button>\n      </form>\n    </div>\n    </div>\n  )\n}\n\nexport default Sell\n",[],{"ruleId":"73","severity":1,"message":"74","line":2,"column":8,"nodeType":"75","messageId":"76","endLine":2,"endColumn":23},{"ruleId":"73","severity":1,"message":"77","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":13},{"ruleId":"73","severity":1,"message":"78","line":9,"column":7,"nodeType":"75","messageId":"76","endLine":9,"endColumn":11},{"ruleId":"73","severity":1,"message":"79","line":19,"column":27,"nodeType":"75","messageId":"76","endLine":19,"endColumn":36},{"ruleId":"80","severity":1,"message":"81","line":23,"column":9,"nodeType":"82","endLine":23,"endColumn":50},{"ruleId":"73","severity":1,"message":"83","line":4,"column":8,"nodeType":"75","messageId":"76","endLine":4,"endColumn":17},{"ruleId":"73","severity":1,"message":"84","line":9,"column":10,"nodeType":"75","messageId":"76","endLine":9,"endColumn":19},{"ruleId":"73","severity":1,"message":"85","line":9,"column":21,"nodeType":"75","messageId":"76","endLine":9,"endColumn":33},{"ruleId":"86","severity":1,"message":"87","line":20,"column":28,"nodeType":"88","messageId":"89","endLine":20,"endColumn":30},{"ruleId":"73","severity":1,"message":"90","line":3,"column":10,"nodeType":"75","messageId":"76","endLine":3,"endColumn":24},{"ruleId":"73","severity":1,"message":"91","line":3,"column":26,"nodeType":"75","messageId":"76","endLine":3,"endColumn":31},"no-unused-vars","'OnSaleItemsList' is defined but never used.","Identifier","unusedVar","'Paper' is defined but never used.","'bull' is assigned a value but never used.","'condition' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'TextField' is defined but never used.","'inputText' is assigned a value but never used.","'setInputText' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'ToastContainer' is defined but never used.","'toast' is defined but never used."]